// Gradle build script for j-ogg-all Maven artifacts

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

ext {
    group = 'com.github.stephengold'
    artifact = 'j-ogg-all'
    version = '1.0.1'
    baseName = "${artifact}-${version}"
}

description = 'J-Ogg is a collection of Java libraries for reading Ogg files and decoding different contained formats.\n\
        At the moment the support for Vorbis and FLAC is almost complete (the library decodes all files created by the\n\
        current versions of libvorbis and libflac correctly) and I\'ve started working on Theora support.'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'javax.media:jmf:2.1.1e'
}

tasks.withType(JavaCompile) { // compile-time options:
    options.compilerArgs << '-Xdiags:verbose'
    //options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
    options.encoding = 'UTF-8'
}

javadoc {
    // Disable doclint for JDK8+.
    if (JavaVersion.current().isJava8Compatible()){
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

// publishing tasks

jar {
    archiveBaseName = project.ext.baseName
}

task javadocJar(type: Jar) {
    archiveBaseName = project.ext.baseName
    classifier = 'javadoc'
    dependsOn 'javadoc'
    description 'Create a JAR of javadoc.'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    archiveBaseName = project.ext.baseName
    classifier = 'sources'
    dependsOn 'classes'
    description 'Create a JAR of sourcecode.'
    from sourceSets.main.allJava
}

build.dependsOn('pom', 'pomAsc')
task('pom', type: Copy) {
    dependsOn 'generatePomFileForMavenPublication'
    from "${buildDir}/publications/maven/pom-default.xml"
    into "${buildDir}/libs"
    rename 'pom-default.xml', baseName + '.pom'
}
task('pomAsc', type: Copy) {
    dependsOn 'signMavenPublication'
    from "${buildDir}/publications/maven/pom-default.xml.asc"
    into "${buildDir}/libs"
    rename 'pom-default.xml.asc', baseName + '.pom.asc'
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact javadocJar
            artifact sourcesJar
            artifactId artifact
            from components.java
            groupId project.ext.group
            pom {
                description = project.description
                developers {
                    developer {
                        name = 'Tor-Einar Jarnbjo'
                    }
                }
                inceptionYear = '2002'
                licenses {
                    license {
                        distribution = 'repo'
                        name = 'Free and commercial use, modification and redistribution with attribution.'
                        url = 'https://github.com/stephengold/j-ogg-all/blob/master/LICENSE'
                    }
                }
                name = project.ext.group + ':' + artifact
                scm {
                    connection = 'scm:git:git://github.com/stephengold/j-ogg-all.git'
                    developerConnection = 'scm:git:ssh://github.com:stephengold/j-ogg-all.git'
                    url = 'https://github.com/stephengold/j-ogg-all/tree/master'
                }
                url = 'https://github.com/stephengold/j-ogg-all'
            }
            version project.ext.version
        }
    }
    repositories {
        maven {
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : 'Unknown user'
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : 'Unknown password'
            }
            name = 'OSSRH'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
        }
    }
}
generateMetadataFileForMavenPublication.dependsOn('pom')
publishToMavenLocal.doLast {
    println 'published to ' + baseName
}

// signing tasks

signing {
    sign publishing.publications.maven
}
tasks.withType(Sign) {
    onlyIf { gradle.rootProject.hasProperty('signing.keyId') }
}
